"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-countup@6.3.0_react@18.2.0";
exports.ids = ["vendor-chunks/react-countup@6.3.0_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/react-countup@6.3.0_react@18.2.0/node_modules/react-countup/build/index.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-countup@6.3.0_react@18.2.0/node_modules/react-countup/build/index.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.0.0_react-dom@18.2.0_react@18.2.0__react@18.2.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar countup_js = __webpack_require__(/*! countup.js */ \"(ssr)/./node_modules/.pnpm/countup.js@2.9.0/node_modules/countup.js/dist/countUp.umd.js\");\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n/**\n * Silence SSR Warnings.\n * Borrowed from Formik v2.1.1, Licensed MIT.\n *\n * https://github.com/formium/formik/blob/9316a864478f8fcd4fa99a0735b1d37afdf507dc/LICENSE\n */\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Create a stable reference to a callback which is updated after each render is committed.\n * Typed version borrowed from Formik v2.2.1. Licensed MIT.\n *\n * https://github.com/formium/formik/blob/9316a864478f8fcd4fa99a0735b1d37afdf507dc/LICENSE\n */\n\nfunction useEventCallback(fn) {\n  var ref = React.useRef(fn); // we copy a ref to the callback scoped to the current state/props on each render\n\n  useIsomorphicLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current.apply(void 0, args);\n  }, []);\n}\n\nvar createCountUpInstance = function createCountUpInstance(el, props) {\n  var decimal = props.decimal,\n      decimals = props.decimals,\n      duration = props.duration,\n      easingFn = props.easingFn,\n      end = props.end,\n      formattingFn = props.formattingFn,\n      numerals = props.numerals,\n      prefix = props.prefix,\n      separator = props.separator,\n      start = props.start,\n      suffix = props.suffix,\n      useEasing = props.useEasing,\n      enableScrollSpy = props.enableScrollSpy,\n      scrollSpyDelay = props.scrollSpyDelay;\n  return new countup_js.CountUp(el, end, {\n    startVal: start,\n    duration: duration,\n    decimal: decimal,\n    decimalPlaces: decimals,\n    easingFn: easingFn,\n    formattingFn: formattingFn,\n    numerals: numerals,\n    separator: separator,\n    prefix: prefix,\n    suffix: suffix,\n    useEasing: useEasing,\n    useGrouping: !!separator,\n    enableScrollSpy: enableScrollSpy,\n    scrollSpyDelay: scrollSpyDelay\n  });\n};\n\nvar _excluded$1 = [\"ref\", \"startOnMount\", \"enableReinitialize\", \"delay\", \"onEnd\", \"onStart\", \"onPauseResume\", \"onReset\", \"onUpdate\"];\nvar DEFAULTS = {\n  decimal: '.',\n  delay: null,\n  prefix: '',\n  suffix: '',\n  duration: 2,\n  start: 0,\n  startOnMount: true,\n  enableReinitialize: true\n};\n\nvar useCountUp = function useCountUp(props) {\n  var _useMemo = React.useMemo(function () {\n    return _objectSpread2(_objectSpread2({}, DEFAULTS), props);\n  }, [props]),\n      ref = _useMemo.ref,\n      startOnMount = _useMemo.startOnMount,\n      enableReinitialize = _useMemo.enableReinitialize,\n      delay = _useMemo.delay,\n      onEnd = _useMemo.onEnd,\n      onStart = _useMemo.onStart,\n      onPauseResume = _useMemo.onPauseResume,\n      onReset = _useMemo.onReset,\n      onUpdate = _useMemo.onUpdate,\n      instanceProps = _objectWithoutProperties(_useMemo, _excluded$1);\n\n  var countUpRef = React.useRef();\n  var timerRef = React.useRef();\n  var isInitializedRef = React.useRef(false);\n  var createInstance = useEventCallback(function () {\n    return createCountUpInstance(typeof ref === 'string' ? ref : ref.current, instanceProps);\n  });\n  var getCountUp = useEventCallback(function (recreate) {\n    var countUp = countUpRef.current;\n\n    if (countUp && !recreate) {\n      return countUp;\n    }\n\n    var newCountUp = createInstance();\n    countUpRef.current = newCountUp;\n    return newCountUp;\n  });\n  var start = useEventCallback(function () {\n    var run = function run() {\n      return getCountUp(true).start(function () {\n        onEnd === null || onEnd === void 0 ? void 0 : onEnd({\n          pauseResume: pauseResume,\n          reset: reset,\n          start: restart,\n          update: update\n        });\n      });\n    };\n\n    if (delay && delay > 0) {\n      timerRef.current = setTimeout(run, delay * 1000);\n    } else {\n      run();\n    }\n\n    onStart === null || onStart === void 0 ? void 0 : onStart({\n      pauseResume: pauseResume,\n      reset: reset,\n      update: update\n    });\n  });\n  var pauseResume = useEventCallback(function () {\n    getCountUp().pauseResume();\n    onPauseResume === null || onPauseResume === void 0 ? void 0 : onPauseResume({\n      reset: reset,\n      start: restart,\n      update: update\n    });\n  });\n  var reset = useEventCallback(function () {\n    timerRef.current && clearTimeout(timerRef.current);\n    getCountUp().reset();\n    onReset === null || onReset === void 0 ? void 0 : onReset({\n      pauseResume: pauseResume,\n      start: restart,\n      update: update\n    });\n  });\n  var update = useEventCallback(function (newEnd) {\n    getCountUp().update(newEnd);\n    onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate({\n      pauseResume: pauseResume,\n      reset: reset,\n      start: restart\n    });\n  });\n  var restart = useEventCallback(function () {\n    reset();\n    start();\n  });\n  var maybeInitialize = useEventCallback(function (shouldReset) {\n    if (startOnMount) {\n      if (shouldReset) {\n        reset();\n      }\n\n      start();\n    }\n  });\n  React.useEffect(function () {\n    if (!isInitializedRef.current) {\n      isInitializedRef.current = true;\n      maybeInitialize();\n    } else if (enableReinitialize) {\n      maybeInitialize(true);\n    }\n  }, [enableReinitialize, isInitializedRef, maybeInitialize, delay, props.start, props.suffix, props.prefix, props.duration, props.separator, props.decimals, props.decimal, props.formattingFn]);\n  React.useEffect(function () {\n    return function () {\n      reset();\n    };\n  }, [reset]);\n  return {\n    start: restart,\n    pauseResume: pauseResume,\n    reset: reset,\n    update: update,\n    getCountUp: getCountUp\n  };\n};\n\nvar _excluded = [\"className\", \"redraw\", \"containerProps\", \"children\", \"style\"];\n\nvar CountUp = function CountUp(props) {\n  var className = props.className,\n      redraw = props.redraw,\n      containerProps = props.containerProps,\n      children = props.children,\n      style = props.style,\n      useCountUpProps = _objectWithoutProperties(props, _excluded);\n\n  var containerRef = React__default[\"default\"].useRef(null);\n  var isInitializedRef = React__default[\"default\"].useRef(false);\n\n  var _useCountUp = useCountUp(_objectSpread2(_objectSpread2({}, useCountUpProps), {}, {\n    ref: containerRef,\n    startOnMount: typeof children !== 'function' || props.delay === 0,\n    // component manually restarts\n    enableReinitialize: false\n  })),\n      start = _useCountUp.start,\n      reset = _useCountUp.reset,\n      updateCountUp = _useCountUp.update,\n      pauseResume = _useCountUp.pauseResume,\n      getCountUp = _useCountUp.getCountUp;\n\n  var restart = useEventCallback(function () {\n    start();\n  });\n  var update = useEventCallback(function (end) {\n    if (!props.preserveValue) {\n      reset();\n    }\n\n    updateCountUp(end);\n  });\n  var initializeOnMount = useEventCallback(function () {\n    if (typeof props.children === 'function') {\n      // Warn when user didn't use containerRef at all\n      if (!(containerRef.current instanceof Element)) {\n        console.error(\"Couldn't find attached element to hook the CountUp instance into! Try to attach \\\"containerRef\\\" from the render prop to a an Element, eg. <span ref={containerRef} />.\");\n        return;\n      }\n    } // unlike the hook, the CountUp component initializes on mount\n\n\n    getCountUp();\n  });\n  React.useEffect(function () {\n    initializeOnMount();\n  }, [initializeOnMount]);\n  React.useEffect(function () {\n    if (isInitializedRef.current) {\n      update(props.end);\n    }\n  }, [props.end, update]);\n  var redrawDependencies = redraw && props; // if props.redraw, call this effect on every props change\n\n  React.useEffect(function () {\n    if (redraw && isInitializedRef.current) {\n      restart();\n    }\n  }, [restart, redraw, redrawDependencies]); // if not props.redraw, call this effect only when certain props are changed\n\n  React.useEffect(function () {\n    if (!redraw && isInitializedRef.current) {\n      restart();\n    }\n  }, [restart, redraw, props.start, props.suffix, props.prefix, props.duration, props.separator, props.decimals, props.decimal, props.className, props.formattingFn]);\n  React.useEffect(function () {\n    isInitializedRef.current = true;\n  }, []);\n\n  if (typeof children === 'function') {\n    // TypeScript forces functional components to return JSX.Element | null.\n    return children({\n      countUpRef: containerRef,\n      start: start,\n      reset: reset,\n      update: updateCountUp,\n      pauseResume: pauseResume,\n      getCountUp: getCountUp\n    });\n  }\n\n  return /*#__PURE__*/React__default[\"default\"].createElement(\"span\", _extends({\n    className: className,\n    ref: containerRef,\n    style: style\n  }, containerProps), props.start ? getCountUp().formattingFn(props.start) : '');\n};\n\nexports[\"default\"] = CountUp;\nexports.useCountUp = useCountUp;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/react-countup@6.3.0_react@18.2.0/node_modules/react-countup/build/index.js\n");

/***/ })

};
;